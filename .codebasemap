{
  "metadata": {
    "version": 1,
    "root": "/Users/dylan/Workspace/effect/burnt",
    "createdAt": "2025-10-28T05:22:39.086Z",
    "updatedAt": "2025-10-28T05:22:39.086Z",
    "totalFiles": 79
  },
  "tree": {
    "name": "burnt",
    "type": "dir",
    "children": [
      {
        "name": "src",
        "type": "dir",
        "children": [
          {
            "name": "__tests__",
            "type": "dir",
            "children": [
              {
                "name": "errors",
                "type": "dir",
                "children": [
                  {
                    "name": "index.test.ts",
                    "type": "file"
                  }
                ]
              },
              {
                "name": "helpers",
                "type": "dir",
                "children": [
                  {
                    "name": "index.ts",
                    "type": "file"
                  },
                  {
                    "name": "testLayers.ts",
                    "type": "file"
                  }
                ]
              },
              {
                "name": "schemas",
                "type": "dir",
                "children": [
                  {
                    "name": "input-focus.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "input-keypress.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "input-keys.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "input-modifiers.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "input-mouse.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "input-resize.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "input-union.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "layout-children.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "layout-request.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "layout-result.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "nodes-layout.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "nodes-metadata.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "nodes-specific.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "nodes-text-style.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "nodes-types.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "nodes-union.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "nodes-yoga.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "props-box.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "props-colors.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "props-flexbox.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "props-static.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "props-text.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "props-transform.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "terminal-antml.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "terminal-buffer.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "terminal-line.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "terminal-operations.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "terminal-rgb-color.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "terminal-segment.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "terminal-style.test.ts",
                    "type": "file"
                  }
                ]
              },
              {
                "name": "types",
                "type": "dir",
                "children": [
                  {
                    "name": "input-composition.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "input-focus-manager.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "input-focus-state.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "input-key.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "input-keypress.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "input-modifiers.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "input-mouse.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "input-resize.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "input-union.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "layout-composition.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "layout-info.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "layout-request.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "layout-result.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "layout-yoga.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "nodes-colors.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "nodes-create.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "nodes-guards.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "nodes-integration.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "nodes-metadata.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "nodes-narrowing.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "nodes-props.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "nodes-render-tree.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "nodes-structure.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "nodes-tree-structure.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "terminal-antml-command.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "terminal-antml-output.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "terminal-buffer.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "terminal-composition.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "terminal-diff.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "terminal-line.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "terminal-operation.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "terminal-rgb.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "terminal-segment.test.ts",
                    "type": "file"
                  },
                  {
                    "name": "terminal-style.test.ts",
                    "type": "file"
                  }
                ]
              },
              {
                "name": "sanity.test.ts",
                "type": "file"
              }
            ]
          },
          {
            "name": "errors",
            "type": "dir",
            "children": [
              {
                "name": "index.ts",
                "type": "file"
              }
            ]
          },
          {
            "name": "schemas",
            "type": "dir",
            "children": [
              {
                "name": "input.ts",
                "type": "file"
              },
              {
                "name": "layout.ts",
                "type": "file"
              },
              {
                "name": "nodes.ts",
                "type": "file"
              },
              {
                "name": "props.ts",
                "type": "file"
              },
              {
                "name": "terminal.ts",
                "type": "file"
              }
            ]
          },
          {
            "name": "types",
            "type": "dir",
            "children": [
              {
                "name": "input.ts",
                "type": "file"
              },
              {
                "name": "layout.ts",
                "type": "file"
              },
              {
                "name": "nodes.ts",
                "type": "file"
              },
              {
                "name": "terminal.ts",
                "type": "file"
              }
            ]
          },
          {
            "name": "index.ts",
            "type": "file"
          }
        ]
      }
    ]
  },
  "nodes": [
    "src/__tests__/errors/index.test.ts",
    "src/__tests__/helpers/index.ts",
    "src/__tests__/helpers/testLayers.ts",
    "src/__tests__/sanity.test.ts",
    "src/__tests__/schemas/input-focus.test.ts",
    "src/__tests__/schemas/input-keypress.test.ts",
    "src/__tests__/schemas/input-keys.test.ts",
    "src/__tests__/schemas/input-modifiers.test.ts",
    "src/__tests__/schemas/input-mouse.test.ts",
    "src/__tests__/schemas/input-resize.test.ts",
    "src/__tests__/schemas/input-union.test.ts",
    "src/__tests__/schemas/layout-children.test.ts",
    "src/__tests__/schemas/layout-request.test.ts",
    "src/__tests__/schemas/layout-result.test.ts",
    "src/__tests__/schemas/nodes-layout.test.ts",
    "src/__tests__/schemas/nodes-metadata.test.ts",
    "src/__tests__/schemas/nodes-specific.test.ts",
    "src/__tests__/schemas/nodes-text-style.test.ts",
    "src/__tests__/schemas/nodes-types.test.ts",
    "src/__tests__/schemas/nodes-union.test.ts",
    "src/__tests__/schemas/nodes-yoga.test.ts",
    "src/__tests__/schemas/props-box.test.ts",
    "src/__tests__/schemas/props-colors.test.ts",
    "src/__tests__/schemas/props-flexbox.test.ts",
    "src/__tests__/schemas/props-static.test.ts",
    "src/__tests__/schemas/props-text.test.ts",
    "src/__tests__/schemas/props-transform.test.ts",
    "src/__tests__/schemas/terminal-antml.test.ts",
    "src/__tests__/schemas/terminal-buffer.test.ts",
    "src/__tests__/schemas/terminal-line.test.ts",
    "src/__tests__/schemas/terminal-operations.test.ts",
    "src/__tests__/schemas/terminal-rgb-color.test.ts",
    "src/__tests__/schemas/terminal-segment.test.ts",
    "src/__tests__/schemas/terminal-style.test.ts",
    "src/__tests__/types/input-composition.test.ts",
    "src/__tests__/types/input-focus-manager.test.ts",
    "src/__tests__/types/input-focus-state.test.ts",
    "src/__tests__/types/input-key.test.ts",
    "src/__tests__/types/input-keypress.test.ts",
    "src/__tests__/types/input-modifiers.test.ts",
    "src/__tests__/types/input-mouse.test.ts",
    "src/__tests__/types/input-resize.test.ts",
    "src/__tests__/types/input-union.test.ts",
    "src/__tests__/types/layout-composition.test.ts",
    "src/__tests__/types/layout-info.test.ts",
    "src/__tests__/types/layout-request.test.ts",
    "src/__tests__/types/layout-result.test.ts",
    "src/__tests__/types/layout-yoga.test.ts",
    "src/__tests__/types/nodes-colors.test.ts",
    "src/__tests__/types/nodes-create.test.ts",
    "src/__tests__/types/nodes-guards.test.ts",
    "src/__tests__/types/nodes-integration.test.ts",
    "src/__tests__/types/nodes-metadata.test.ts",
    "src/__tests__/types/nodes-narrowing.test.ts",
    "src/__tests__/types/nodes-props.test.ts",
    "src/__tests__/types/nodes-render-tree.test.ts",
    "src/__tests__/types/nodes-structure.test.ts",
    "src/__tests__/types/nodes-tree-structure.test.ts",
    "src/__tests__/types/terminal-antml-command.test.ts",
    "src/__tests__/types/terminal-antml-output.test.ts",
    "src/__tests__/types/terminal-buffer.test.ts",
    "src/__tests__/types/terminal-composition.test.ts",
    "src/__tests__/types/terminal-diff.test.ts",
    "src/__tests__/types/terminal-line.test.ts",
    "src/__tests__/types/terminal-operation.test.ts",
    "src/__tests__/types/terminal-rgb.test.ts",
    "src/__tests__/types/terminal-segment.test.ts",
    "src/__tests__/types/terminal-style.test.ts",
    "src/errors/index.ts",
    "src/index.ts",
    "src/schemas/input.ts",
    "src/schemas/layout.ts",
    "src/schemas/nodes.ts",
    "src/schemas/props.ts",
    "src/schemas/terminal.ts",
    "src/types/input.ts",
    "src/types/layout.ts",
    "src/types/nodes.ts",
    "src/types/terminal.ts"
  ],
  "edges": [
    {
      "from": "src/__tests__/errors/index.test.ts",
      "to": "src/errors/index.ts"
    },
    {
      "from": "src/__tests__/helpers/index.ts",
      "to": "src/__tests__/helpers/testLayers.ts"
    },
    {
      "from": "src/__tests__/sanity.test.ts",
      "to": "src/__tests__/helpers/index.ts"
    },
    {
      "from": "src/__tests__/sanity.test.ts",
      "to": "src/index.ts"
    },
    {
      "from": "src/__tests__/schemas/input-focus.test.ts",
      "to": "src/schemas/input.ts"
    },
    {
      "from": "src/__tests__/schemas/input-keypress.test.ts",
      "to": "src/schemas/input.ts"
    },
    {
      "from": "src/__tests__/schemas/input-keys.test.ts",
      "to": "src/schemas/input.ts"
    },
    {
      "from": "src/__tests__/schemas/input-modifiers.test.ts",
      "to": "src/schemas/input.ts"
    },
    {
      "from": "src/__tests__/schemas/input-mouse.test.ts",
      "to": "src/schemas/input.ts"
    },
    {
      "from": "src/__tests__/schemas/input-resize.test.ts",
      "to": "src/schemas/input.ts"
    },
    {
      "from": "src/__tests__/schemas/input-union.test.ts",
      "to": "src/schemas/input.ts"
    },
    {
      "from": "src/__tests__/schemas/layout-children.test.ts",
      "to": "src/schemas/layout.ts"
    },
    {
      "from": "src/__tests__/schemas/layout-request.test.ts",
      "to": "src/schemas/layout.ts"
    },
    {
      "from": "src/__tests__/schemas/layout-result.test.ts",
      "to": "src/schemas/layout.ts"
    },
    {
      "from": "src/__tests__/schemas/nodes-layout.test.ts",
      "to": "src/schemas/nodes.ts"
    },
    {
      "from": "src/__tests__/schemas/nodes-metadata.test.ts",
      "to": "src/schemas/nodes.ts"
    },
    {
      "from": "src/__tests__/schemas/nodes-specific.test.ts",
      "to": "src/schemas/nodes.ts"
    },
    {
      "from": "src/__tests__/schemas/nodes-text-style.test.ts",
      "to": "src/schemas/nodes.ts"
    },
    {
      "from": "src/__tests__/schemas/nodes-types.test.ts",
      "to": "src/schemas/nodes.ts"
    },
    {
      "from": "src/__tests__/schemas/nodes-union.test.ts",
      "to": "src/schemas/nodes.ts"
    },
    {
      "from": "src/__tests__/schemas/nodes-yoga.test.ts",
      "to": "src/schemas/nodes.ts"
    },
    {
      "from": "src/__tests__/schemas/props-box.test.ts",
      "to": "src/schemas/props.ts"
    },
    {
      "from": "src/__tests__/schemas/props-colors.test.ts",
      "to": "src/schemas/props.ts"
    },
    {
      "from": "src/__tests__/schemas/props-flexbox.test.ts",
      "to": "src/schemas/props.ts"
    },
    {
      "from": "src/__tests__/schemas/props-static.test.ts",
      "to": "src/schemas/props.ts"
    },
    {
      "from": "src/__tests__/schemas/props-text.test.ts",
      "to": "src/schemas/props.ts"
    },
    {
      "from": "src/__tests__/schemas/props-transform.test.ts",
      "to": "src/schemas/props.ts"
    },
    {
      "from": "src/__tests__/schemas/terminal-antml.test.ts",
      "to": "src/schemas/terminal.ts"
    },
    {
      "from": "src/__tests__/schemas/terminal-buffer.test.ts",
      "to": "src/schemas/terminal.ts"
    },
    {
      "from": "src/__tests__/schemas/terminal-line.test.ts",
      "to": "src/schemas/terminal.ts"
    },
    {
      "from": "src/__tests__/schemas/terminal-operations.test.ts",
      "to": "src/schemas/terminal.ts"
    },
    {
      "from": "src/__tests__/schemas/terminal-rgb-color.test.ts",
      "to": "src/schemas/terminal.ts"
    },
    {
      "from": "src/__tests__/schemas/terminal-segment.test.ts",
      "to": "src/schemas/terminal.ts"
    },
    {
      "from": "src/__tests__/schemas/terminal-style.test.ts",
      "to": "src/schemas/terminal.ts"
    },
    {
      "from": "src/__tests__/types/input-composition.test.ts",
      "to": "src/types/input.ts"
    },
    {
      "from": "src/__tests__/types/input-focus-manager.test.ts",
      "to": "src/types/input.ts"
    },
    {
      "from": "src/__tests__/types/input-focus-state.test.ts",
      "to": "src/types/input.ts"
    },
    {
      "from": "src/__tests__/types/input-key.test.ts",
      "to": "src/types/input.ts"
    },
    {
      "from": "src/__tests__/types/input-keypress.test.ts",
      "to": "src/types/input.ts"
    },
    {
      "from": "src/__tests__/types/input-modifiers.test.ts",
      "to": "src/types/input.ts"
    },
    {
      "from": "src/__tests__/types/input-mouse.test.ts",
      "to": "src/types/input.ts"
    },
    {
      "from": "src/__tests__/types/input-resize.test.ts",
      "to": "src/types/input.ts"
    },
    {
      "from": "src/__tests__/types/input-union.test.ts",
      "to": "src/types/input.ts"
    },
    {
      "from": "src/__tests__/types/layout-composition.test.ts",
      "to": "src/types/layout.ts"
    },
    {
      "from": "src/__tests__/types/layout-composition.test.ts",
      "to": "src/types/nodes.ts"
    },
    {
      "from": "src/__tests__/types/layout-info.test.ts",
      "to": "src/types/layout.ts"
    },
    {
      "from": "src/__tests__/types/layout-request.test.ts",
      "to": "src/types/layout.ts"
    },
    {
      "from": "src/__tests__/types/layout-result.test.ts",
      "to": "src/types/layout.ts"
    },
    {
      "from": "src/__tests__/types/layout-yoga.test.ts",
      "to": "src/types/layout.ts"
    },
    {
      "from": "src/__tests__/types/layout-yoga.test.ts",
      "to": "src/types/nodes.ts"
    },
    {
      "from": "src/__tests__/types/nodes-colors.test.ts",
      "to": "src/types/nodes.ts"
    },
    {
      "from": "src/__tests__/types/nodes-create.test.ts",
      "to": "src/types/nodes.ts"
    },
    {
      "from": "src/__tests__/types/nodes-guards.test.ts",
      "to": "src/types/nodes.ts"
    },
    {
      "from": "src/__tests__/types/nodes-integration.test.ts",
      "to": "src/types/nodes.ts"
    },
    {
      "from": "src/__tests__/types/nodes-metadata.test.ts",
      "to": "src/types/nodes.ts"
    },
    {
      "from": "src/__tests__/types/nodes-narrowing.test.ts",
      "to": "src/types/nodes.ts"
    },
    {
      "from": "src/__tests__/types/nodes-props.test.ts",
      "to": "src/types/nodes.ts"
    },
    {
      "from": "src/__tests__/types/nodes-render-tree.test.ts",
      "to": "src/types/nodes.ts"
    },
    {
      "from": "src/__tests__/types/nodes-structure.test.ts",
      "to": "src/types/nodes.ts"
    },
    {
      "from": "src/__tests__/types/nodes-tree-structure.test.ts",
      "to": "src/types/nodes.ts"
    },
    {
      "from": "src/__tests__/types/terminal-antml-command.test.ts",
      "to": "src/types/terminal.ts"
    },
    {
      "from": "src/__tests__/types/terminal-antml-output.test.ts",
      "to": "src/types/terminal.ts"
    },
    {
      "from": "src/__tests__/types/terminal-buffer.test.ts",
      "to": "src/types/terminal.ts"
    },
    {
      "from": "src/__tests__/types/terminal-composition.test.ts",
      "to": "src/types/terminal.ts"
    },
    {
      "from": "src/__tests__/types/terminal-diff.test.ts",
      "to": "src/types/terminal.ts"
    },
    {
      "from": "src/__tests__/types/terminal-line.test.ts",
      "to": "src/types/terminal.ts"
    },
    {
      "from": "src/__tests__/types/terminal-operation.test.ts",
      "to": "src/types/terminal.ts"
    },
    {
      "from": "src/__tests__/types/terminal-rgb.test.ts",
      "to": "src/types/nodes.ts"
    },
    {
      "from": "src/__tests__/types/terminal-segment.test.ts",
      "to": "src/types/terminal.ts"
    },
    {
      "from": "src/__tests__/types/terminal-style.test.ts",
      "to": "src/types/terminal.ts"
    },
    {
      "from": "src/schemas/layout.ts",
      "to": "src/schemas/nodes.ts"
    },
    {
      "from": "src/schemas/nodes.ts",
      "to": "src/schemas/props.ts"
    },
    {
      "from": "src/types/layout.ts",
      "to": "src/types/nodes.ts"
    },
    {
      "from": "src/types/terminal.ts",
      "to": "src/types/nodes.ts"
    }
  ],
  "files": {
    "src/__tests__/errors/index.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "effect",
          "kind": "import",
          "imported": [
            "Effect",
            "Either"
          ]
        },
        {
          "from": "../../errors/index.js",
          "kind": "import",
          "imported": [
            "focusError",
            "InkError",
            "inputError",
            "LayoutError",
            "layoutError",
            "outputError",
            "RenderError",
            "renderError",
            "terminalError"
          ]
        }
      ],
      "dependencies": [
        "src/errors/index.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": [
        {
          "name": "errorFactories",
          "initKind": "unknown",
          "isExported": false
        },
        {
          "name": "errorsWithNodeId",
          "initKind": "unknown",
          "isExported": false
        },
        {
          "name": "errorsWithCause",
          "initKind": "unknown",
          "isExported": false
        },
        {
          "name": "testEffectCatch",
          "initKind": "function",
          "isExported": false
        }
      ]
    },
    "src/__tests__/helpers/index.ts": {
      "imports": [
        {
          "from": "./testLayers",
          "kind": "export",
          "imported": [
            "createTestLayer",
            "runTestEffect",
            "runTestEffectWithResult"
          ]
        }
      ],
      "dependencies": [
        "src/__tests__/helpers/testLayers.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/__tests__/helpers/testLayers.ts": {
      "imports": [
        {
          "from": "effect",
          "kind": "import",
          "imported": [
            "Effect",
            "Layer"
          ]
        },
        {
          "from": "effect/Either",
          "kind": "import",
          "imported": [
            "Either"
          ]
        }
      ],
      "dependencies": [],
      "functions": [],
      "classes": [],
      "constants": [
        {
          "name": "runTestEffect",
          "initKind": "function",
          "isExported": true
        },
        {
          "name": "runTestEffectWithResult",
          "initKind": "function",
          "isExported": true
        },
        {
          "name": "createTestLayer",
          "initKind": "function",
          "isExported": true
        }
      ]
    },
    "src/__tests__/sanity.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "effect",
          "kind": "import",
          "imported": [
            "Effect"
          ]
        },
        {
          "from": "../index",
          "kind": "import",
          "isNamespace": true
        },
        {
          "from": "./helpers",
          "kind": "import",
          "imported": [
            "runTestEffect"
          ]
        }
      ],
      "dependencies": [
        "src/__tests__/helpers/index.ts",
        "src/index.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/__tests__/schemas/input-focus.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../schemas/input.js",
          "kind": "import",
          "imported": [
            "decodeFocusState"
          ]
        }
      ],
      "dependencies": [
        "src/schemas/input.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": [
        {
          "name": "createFocusState",
          "initKind": "function",
          "isExported": false
        },
        {
          "name": "expectValid",
          "initKind": "function",
          "isExported": false
        },
        {
          "name": "expectInvalid",
          "initKind": "function",
          "isExported": false
        }
      ]
    },
    "src/__tests__/schemas/input-keypress.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../schemas/input.js",
          "kind": "import",
          "imported": [
            "decodeKeyPress"
          ]
        }
      ],
      "dependencies": [
        "src/schemas/input.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": [
        {
          "name": "createKey",
          "initKind": "function",
          "isExported": false
        },
        {
          "name": "createModifiers",
          "initKind": "function",
          "isExported": false
        },
        {
          "name": "createKeyPress",
          "initKind": "function",
          "isExported": false
        },
        {
          "name": "expectValid",
          "initKind": "function",
          "isExported": false
        },
        {
          "name": "expectInvalid",
          "initKind": "function",
          "isExported": false
        }
      ]
    },
    "src/__tests__/schemas/input-keys.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../schemas/input.js",
          "kind": "import",
          "imported": [
            "decodeKey"
          ]
        }
      ],
      "dependencies": [
        "src/schemas/input.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": [
        {
          "name": "createKey",
          "initKind": "function",
          "isExported": false
        },
        {
          "name": "expectValid",
          "initKind": "function",
          "isExported": false
        },
        {
          "name": "expectInvalid",
          "initKind": "function",
          "isExported": false
        }
      ]
    },
    "src/__tests__/schemas/input-modifiers.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../schemas/input.js",
          "kind": "import",
          "imported": [
            "decodeKeyModifiers"
          ]
        }
      ],
      "dependencies": [
        "src/schemas/input.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": [
        {
          "name": "createModifiers",
          "initKind": "function",
          "isExported": false
        },
        {
          "name": "expectValid",
          "initKind": "function",
          "isExported": false
        },
        {
          "name": "expectInvalid",
          "initKind": "function",
          "isExported": false
        }
      ]
    },
    "src/__tests__/schemas/input-mouse.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../schemas/input.js",
          "kind": "import",
          "imported": [
            "decodeMouseEvent"
          ]
        }
      ],
      "dependencies": [
        "src/schemas/input.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": [
        {
          "name": "createMouseEvent",
          "initKind": "function",
          "isExported": false
        },
        {
          "name": "expectValid",
          "initKind": "function",
          "isExported": false
        },
        {
          "name": "expectInvalid",
          "initKind": "function",
          "isExported": false
        }
      ]
    },
    "src/__tests__/schemas/input-resize.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../schemas/input.js",
          "kind": "import",
          "imported": [
            "decodeResizeEvent"
          ]
        }
      ],
      "dependencies": [
        "src/schemas/input.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": [
        {
          "name": "createResizeEvent",
          "initKind": "function",
          "isExported": false
        },
        {
          "name": "expectValid",
          "initKind": "function",
          "isExported": false
        },
        {
          "name": "expectInvalid",
          "initKind": "function",
          "isExported": false
        }
      ]
    },
    "src/__tests__/schemas/input-union.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../schemas/input.js",
          "kind": "import",
          "imported": [
            "decodeInputEvent"
          ]
        }
      ],
      "dependencies": [
        "src/schemas/input.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": [
        {
          "name": "createKey",
          "initKind": "function",
          "isExported": false
        },
        {
          "name": "createModifiers",
          "initKind": "function",
          "isExported": false
        },
        {
          "name": "createKeyPress",
          "initKind": "function",
          "isExported": false
        },
        {
          "name": "createMouseEvent",
          "initKind": "function",
          "isExported": false
        },
        {
          "name": "createResizeEvent",
          "initKind": "function",
          "isExported": false
        },
        {
          "name": "expectValid",
          "initKind": "function",
          "isExported": false
        },
        {
          "name": "expectInvalid",
          "initKind": "function",
          "isExported": false
        }
      ]
    },
    "src/__tests__/schemas/layout-children.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../schemas/layout.js",
          "kind": "import",
          "imported": [
            "decodeChildLayoutEntry"
          ]
        }
      ],
      "dependencies": [
        "src/schemas/layout.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/__tests__/schemas/layout-request.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../schemas/layout.js",
          "kind": "import",
          "imported": [
            "decodeLayoutRequest"
          ]
        }
      ],
      "dependencies": [
        "src/schemas/layout.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/__tests__/schemas/layout-result.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../schemas/layout.js",
          "kind": "import",
          "imported": [
            "decodeLayoutResult"
          ]
        }
      ],
      "dependencies": [
        "src/schemas/layout.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/__tests__/schemas/nodes-layout.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../schemas/nodes.js",
          "kind": "import",
          "imported": [
            "decodeLayoutInfo"
          ]
        }
      ],
      "dependencies": [
        "src/schemas/nodes.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/__tests__/schemas/nodes-metadata.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../schemas/nodes.js",
          "kind": "import",
          "imported": [
            "decodeNodeMetadata"
          ]
        }
      ],
      "dependencies": [
        "src/schemas/nodes.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/__tests__/schemas/nodes-specific.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../schemas/nodes.js",
          "kind": "import",
          "imported": [
            "decodeBoxNode",
            "decodeNewlineNode",
            "decodeRootNode",
            "decodeSpacerNode",
            "decodeStaticNode",
            "decodeTextNode",
            "decodeTransformNode"
          ]
        }
      ],
      "dependencies": [
        "src/schemas/nodes.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": [
        {
          "name": "createMinimalMetadata",
          "initKind": "function",
          "isExported": false
        }
      ]
    },
    "src/__tests__/schemas/nodes-text-style.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../schemas/nodes.js",
          "kind": "import",
          "imported": [
            "decodeStyledText",
            "decodeTextStyle"
          ]
        }
      ],
      "dependencies": [
        "src/schemas/nodes.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/__tests__/schemas/nodes-types.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../schemas/nodes.js",
          "kind": "import",
          "imported": [
            "decodeNodeType"
          ]
        }
      ],
      "dependencies": [
        "src/schemas/nodes.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/__tests__/schemas/nodes-union.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../schemas/nodes.js",
          "kind": "import",
          "imported": [
            "decodeRenderNode"
          ]
        }
      ],
      "dependencies": [
        "src/schemas/nodes.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": [
        {
          "name": "createMinimalMetadata",
          "initKind": "function",
          "isExported": false
        }
      ]
    },
    "src/__tests__/schemas/nodes-yoga.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../schemas/nodes.js",
          "kind": "import",
          "imported": [
            "decodeYogaNode"
          ]
        }
      ],
      "dependencies": [
        "src/schemas/nodes.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/__tests__/schemas/props-box.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../schemas/props.js",
          "kind": "import",
          "imported": [
            "decodeBoxProps"
          ]
        }
      ],
      "dependencies": [
        "src/schemas/props.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/__tests__/schemas/props-colors.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../schemas/props.js",
          "kind": "import",
          "imported": [
            "decodeColor",
            "decodeHSLColor",
            "decodeRGBColor"
          ]
        }
      ],
      "dependencies": [
        "src/schemas/props.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/__tests__/schemas/props-flexbox.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../schemas/props.js",
          "kind": "import",
          "imported": [
            "decodeAlignItems",
            "decodeAlignSelf",
            "decodeBorderStyle",
            "decodeFlexDirection",
            "decodeJustifyContent"
          ]
        }
      ],
      "dependencies": [
        "src/schemas/props.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/__tests__/schemas/props-static.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../schemas/props.js",
          "kind": "import",
          "imported": [
            "decodeStaticProps"
          ]
        }
      ],
      "dependencies": [
        "src/schemas/props.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/__tests__/schemas/props-text.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../schemas/props.js",
          "kind": "import",
          "imported": [
            "decodeTextProps",
            "decodeWrapMode"
          ]
        }
      ],
      "dependencies": [
        "src/schemas/props.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/__tests__/schemas/props-transform.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../schemas/props.js",
          "kind": "import",
          "imported": [
            "decodeTransformProps"
          ]
        }
      ],
      "dependencies": [
        "src/schemas/props.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/__tests__/schemas/terminal-antml.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../schemas/terminal.js",
          "kind": "import",
          "imported": [
            "decodeANTMLCommand",
            "decodeANTMLOutput"
          ]
        }
      ],
      "dependencies": [
        "src/schemas/terminal.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/__tests__/schemas/terminal-buffer.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../schemas/terminal.js",
          "kind": "import",
          "imported": [
            "decodeOutputBuffer"
          ]
        }
      ],
      "dependencies": [
        "src/schemas/terminal.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/__tests__/schemas/terminal-line.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../schemas/terminal.js",
          "kind": "import",
          "imported": [
            "decodeOutputLine"
          ]
        }
      ],
      "dependencies": [
        "src/schemas/terminal.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/__tests__/schemas/terminal-operations.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../schemas/terminal.js",
          "kind": "import",
          "imported": [
            "decodeOutputDiff",
            "decodeOutputOperation"
          ]
        }
      ],
      "dependencies": [
        "src/schemas/terminal.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/__tests__/schemas/terminal-rgb-color.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../schemas/terminal.js",
          "kind": "import",
          "imported": [
            "decodeRGBColor"
          ]
        }
      ],
      "dependencies": [
        "src/schemas/terminal.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/__tests__/schemas/terminal-segment.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../schemas/terminal.js",
          "kind": "import",
          "imported": [
            "decodeOutputSegment"
          ]
        }
      ],
      "dependencies": [
        "src/schemas/terminal.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/__tests__/schemas/terminal-style.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../schemas/terminal.js",
          "kind": "import",
          "imported": [
            "decodeTerminalStyle"
          ]
        }
      ],
      "dependencies": [
        "src/schemas/terminal.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/__tests__/types/input-composition.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../types/input.js",
          "kind": "import",
          "imported": [
            "Key",
            "KeyModifiers",
            "KeyPress"
          ]
        }
      ],
      "dependencies": [
        "src/types/input.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": [
        {
          "name": "createKey",
          "initKind": "function",
          "isExported": false
        },
        {
          "name": "createModifiers",
          "initKind": "function",
          "isExported": false
        },
        {
          "name": "createKeyPress",
          "initKind": "function",
          "isExported": false
        }
      ]
    },
    "src/__tests__/types/input-focus-manager.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../types/input.js",
          "kind": "import",
          "imported": [
            "FocusManager"
          ]
        }
      ],
      "dependencies": [
        "src/types/input.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": [
        {
          "name": "createFocusManager",
          "initKind": "function",
          "isExported": false
        }
      ]
    },
    "src/__tests__/types/input-focus-state.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../types/input.js",
          "kind": "import",
          "imported": [
            "FocusState"
          ]
        }
      ],
      "dependencies": [
        "src/types/input.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": [
        {
          "name": "createFocusState",
          "initKind": "function",
          "isExported": false
        }
      ]
    },
    "src/__tests__/types/input-key.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../types/input.js",
          "kind": "import",
          "imported": [
            "Key"
          ]
        }
      ],
      "dependencies": [
        "src/types/input.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": [
        {
          "name": "createKey",
          "initKind": "function",
          "isExported": false
        }
      ]
    },
    "src/__tests__/types/input-keypress.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../types/input.js",
          "kind": "import",
          "imported": [
            "Key",
            "KeyModifiers",
            "KeyPress"
          ]
        }
      ],
      "dependencies": [
        "src/types/input.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": [
        {
          "name": "createKey",
          "initKind": "function",
          "isExported": false
        },
        {
          "name": "createModifiers",
          "initKind": "function",
          "isExported": false
        },
        {
          "name": "createKeyPress",
          "initKind": "function",
          "isExported": false
        }
      ]
    },
    "src/__tests__/types/input-modifiers.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../types/input.js",
          "kind": "import",
          "imported": [
            "KeyModifiers"
          ]
        }
      ],
      "dependencies": [
        "src/types/input.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": [
        {
          "name": "createModifiers",
          "initKind": "function",
          "isExported": false
        }
      ]
    },
    "src/__tests__/types/input-mouse.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../types/input.js",
          "kind": "import",
          "imported": [
            "MouseEvent"
          ]
        }
      ],
      "dependencies": [
        "src/types/input.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": [
        {
          "name": "createMouseEvent",
          "initKind": "function",
          "isExported": false
        }
      ]
    },
    "src/__tests__/types/input-resize.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../types/input.js",
          "kind": "import",
          "imported": [
            "ResizeEvent"
          ]
        }
      ],
      "dependencies": [
        "src/types/input.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": [
        {
          "name": "createResizeEvent",
          "initKind": "function",
          "isExported": false
        }
      ]
    },
    "src/__tests__/types/input-union.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../types/input.js",
          "kind": "import",
          "imported": [
            "InputEvent",
            "Key",
            "KeyModifiers",
            "KeyPress",
            "MouseEvent",
            "ResizeEvent"
          ]
        }
      ],
      "dependencies": [
        "src/types/input.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": [
        {
          "name": "createKey",
          "initKind": "function",
          "isExported": false
        },
        {
          "name": "createModifiers",
          "initKind": "function",
          "isExported": false
        },
        {
          "name": "createKeyPress",
          "initKind": "function",
          "isExported": false
        },
        {
          "name": "createMouseEvent",
          "initKind": "function",
          "isExported": false
        },
        {
          "name": "createResizeEvent",
          "initKind": "function",
          "isExported": false
        }
      ]
    },
    "src/__tests__/types/layout-composition.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../types/layout.js",
          "kind": "import",
          "imported": [
            "LayoutInfo",
            "LayoutRequest",
            "LayoutResult",
            "YogaNode"
          ]
        },
        {
          "from": "../../types/nodes.js",
          "kind": "import",
          "imported": [
            "BoxProps"
          ]
        }
      ],
      "dependencies": [
        "src/types/layout.ts",
        "src/types/nodes.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": [
        {
          "name": "createLayoutInfo",
          "initKind": "function",
          "isExported": false
        },
        {
          "name": "createYogaNode",
          "initKind": "function",
          "isExported": false
        },
        {
          "name": "createLayoutRequest",
          "initKind": "function",
          "isExported": false
        },
        {
          "name": "createLayoutResult",
          "initKind": "function",
          "isExported": false
        }
      ]
    },
    "src/__tests__/types/layout-info.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../types/layout.js",
          "kind": "import",
          "imported": [
            "LayoutInfo"
          ]
        }
      ],
      "dependencies": [
        "src/types/layout.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": [
        {
          "name": "createLayoutInfo",
          "initKind": "function",
          "isExported": false
        }
      ]
    },
    "src/__tests__/types/layout-request.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../types/layout.js",
          "kind": "import",
          "imported": [
            "LayoutRequest"
          ]
        }
      ],
      "dependencies": [
        "src/types/layout.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": [
        {
          "name": "createLayoutRequest",
          "initKind": "function",
          "isExported": false
        }
      ]
    },
    "src/__tests__/types/layout-result.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../types/layout.js",
          "kind": "import",
          "imported": [
            "LayoutInfo",
            "LayoutResult"
          ]
        }
      ],
      "dependencies": [
        "src/types/layout.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": [
        {
          "name": "createLayoutInfo",
          "initKind": "function",
          "isExported": false
        },
        {
          "name": "createLayoutResult",
          "initKind": "function",
          "isExported": false
        }
      ]
    },
    "src/__tests__/types/layout-yoga.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../types/layout.js",
          "kind": "import",
          "imported": [
            "LayoutInfo",
            "YogaNode"
          ]
        },
        {
          "from": "../../types/nodes.js",
          "kind": "import",
          "imported": [
            "BoxProps"
          ]
        }
      ],
      "dependencies": [
        "src/types/layout.ts",
        "src/types/nodes.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": [
        {
          "name": "createLayoutInfo",
          "initKind": "function",
          "isExported": false
        },
        {
          "name": "createYogaNode",
          "initKind": "function",
          "isExported": false
        }
      ]
    },
    "src/__tests__/types/nodes-colors.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../types/nodes",
          "kind": "import",
          "imported": [
            "TextProps"
          ]
        }
      ],
      "dependencies": [
        "src/types/nodes.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/__tests__/types/nodes-create.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../types/nodes",
          "kind": "import",
          "imported": [
            "createNode",
            "NodeType"
          ]
        }
      ],
      "dependencies": [
        "src/types/nodes.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/__tests__/types/nodes-guards.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../types/nodes",
          "kind": "import",
          "imported": [
            "createNode",
            "isBoxNode",
            "isNewlineNode",
            "isRootNode",
            "isSpacerNode",
            "isStaticNode",
            "isTextNode",
            "isTransformNode",
            "NodeType"
          ]
        }
      ],
      "dependencies": [
        "src/types/nodes.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": [
        {
          "name": "typeGuards",
          "initKind": "unknown",
          "isExported": false
        }
      ]
    },
    "src/__tests__/types/nodes-integration.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../types/nodes",
          "kind": "import",
          "imported": [
            "createNode",
            "createRenderTree",
            "NodeType",
            "RenderNode"
          ]
        }
      ],
      "dependencies": [
        "src/types/nodes.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/__tests__/types/nodes-metadata.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../types/nodes",
          "kind": "import",
          "imported": [
            "createNode",
            "NodeType"
          ]
        }
      ],
      "dependencies": [
        "src/types/nodes.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/__tests__/types/nodes-narrowing.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../types/nodes",
          "kind": "import",
          "imported": [
            "BoxProps",
            "createNode",
            "isBoxNode",
            "isNewlineNode",
            "isStaticNode",
            "isTextNode",
            "isTransformNode",
            "NodeType",
            "RenderNode"
          ]
        }
      ],
      "dependencies": [
        "src/types/nodes.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/__tests__/types/nodes-props.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../types/nodes",
          "kind": "import",
          "imported": [
            "BoxProps",
            "TextProps"
          ]
        }
      ],
      "dependencies": [
        "src/types/nodes.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/__tests__/types/nodes-render-tree.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../types/nodes",
          "kind": "import",
          "imported": [
            "createRenderTree",
            "NodeType"
          ]
        }
      ],
      "dependencies": [
        "src/types/nodes.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/__tests__/types/nodes-structure.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../types/nodes",
          "kind": "import",
          "imported": [
            "createNode",
            "NodeType"
          ]
        }
      ],
      "dependencies": [
        "src/types/nodes.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": [
        {
          "name": "baseNodeProperties",
          "initKind": "array",
          "isExported": false
        }
      ]
    },
    "src/__tests__/types/nodes-tree-structure.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../types/nodes",
          "kind": "import",
          "imported": [
            "createNode",
            "createRenderTree",
            "NodeType"
          ]
        }
      ],
      "dependencies": [
        "src/types/nodes.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/__tests__/types/terminal-antml-command.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../types/terminal.js",
          "kind": "import",
          "imported": [
            "ANTMLCommand"
          ]
        }
      ],
      "dependencies": [
        "src/types/terminal.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/__tests__/types/terminal-antml-output.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../types/terminal.js",
          "kind": "import",
          "imported": [
            "ANTMLOutput"
          ]
        }
      ],
      "dependencies": [
        "src/types/terminal.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/__tests__/types/terminal-buffer.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../types/terminal.js",
          "kind": "import",
          "imported": [
            "OutputBuffer",
            "OutputLine"
          ]
        }
      ],
      "dependencies": [
        "src/types/terminal.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/__tests__/types/terminal-composition.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../types/terminal.js",
          "kind": "import",
          "imported": [
            "ANTMLOutput",
            "OutputBuffer",
            "OutputDiff",
            "OutputLine",
            "OutputSegment"
          ]
        }
      ],
      "dependencies": [
        "src/types/terminal.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/__tests__/types/terminal-diff.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../types/terminal.js",
          "kind": "import",
          "imported": [
            "OutputDiff"
          ]
        }
      ],
      "dependencies": [
        "src/types/terminal.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/__tests__/types/terminal-line.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../types/terminal.js",
          "kind": "import",
          "imported": [
            "OutputLine"
          ]
        }
      ],
      "dependencies": [
        "src/types/terminal.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/__tests__/types/terminal-operation.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../types/terminal.js",
          "kind": "import",
          "imported": [
            "OutputOperation"
          ]
        }
      ],
      "dependencies": [
        "src/types/terminal.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/__tests__/types/terminal-rgb.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../types/nodes.js",
          "kind": "import",
          "imported": [
            "RGBColor"
          ]
        }
      ],
      "dependencies": [
        "src/types/nodes.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/__tests__/types/terminal-segment.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../types/terminal.js",
          "kind": "import",
          "imported": [
            "OutputSegment"
          ]
        }
      ],
      "dependencies": [
        "src/types/terminal.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/__tests__/types/terminal-style.test.ts": {
      "imports": [
        {
          "from": "bun:test",
          "kind": "import",
          "imported": [
            "describe",
            "expect",
            "test"
          ]
        },
        {
          "from": "../../types/terminal.js",
          "kind": "import",
          "imported": [
            "TerminalStyle"
          ]
        }
      ],
      "dependencies": [
        "src/types/terminal.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/errors/index.ts": {
      "imports": [
        {
          "from": "effect",
          "kind": "import",
          "imported": [
            "Data"
          ]
        }
      ],
      "dependencies": [],
      "functions": [],
      "classes": [
        {
          "name": "RenderError",
          "isExported": true,
          "methods": [],
          "properties": [],
          "extends": "Data.TaggedError(\"RenderError\")"
        },
        {
          "name": "LayoutError",
          "isExported": true,
          "methods": [],
          "properties": [],
          "extends": "Data.TaggedError(\"LayoutError\")"
        },
        {
          "name": "TerminalError",
          "isExported": true,
          "methods": [],
          "properties": [],
          "extends": "Data.TaggedError(\"TerminalError\")"
        },
        {
          "name": "InputError",
          "isExported": true,
          "methods": [],
          "properties": [],
          "extends": "Data.TaggedError(\"InputError\")"
        },
        {
          "name": "OutputError",
          "isExported": true,
          "methods": [],
          "properties": [],
          "extends": "Data.TaggedError(\"OutputError\")"
        },
        {
          "name": "FocusError",
          "isExported": true,
          "methods": [],
          "properties": [],
          "extends": "Data.TaggedError(\"FocusError\")"
        }
      ],
      "constants": [
        {
          "name": "renderError",
          "initKind": "function",
          "isExported": true
        },
        {
          "name": "layoutError",
          "initKind": "function",
          "isExported": true
        },
        {
          "name": "terminalError",
          "initKind": "function",
          "isExported": true
        },
        {
          "name": "inputError",
          "initKind": "function",
          "isExported": true
        },
        {
          "name": "outputError",
          "initKind": "function",
          "isExported": true
        },
        {
          "name": "focusError",
          "initKind": "function",
          "isExported": true
        }
      ]
    },
    "src/index.ts": {
      "imports": [],
      "dependencies": [],
      "functions": [],
      "classes": [],
      "constants": [
        {
          "name": "version",
          "initKind": "literal",
          "isExported": true
        },
        {
          "name": "ready",
          "initKind": "literal",
          "isExported": true
        }
      ]
    },
    "src/schemas/input.ts": {
      "imports": [
        {
          "from": "@effect/schema",
          "kind": "import",
          "imported": [
            "Schema"
          ]
        }
      ],
      "dependencies": [],
      "functions": [],
      "classes": [],
      "constants": [
        {
          "name": "KeySchema",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeKey",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "KeyModifiersSchema",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeKeyModifiers",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "KeyPressSchema",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeKeyPress",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "MouseEventSchema",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeMouseEvent",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "ResizeEventSchema",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeResizeEvent",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "InputEventSchema",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeInputEvent",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "FocusStateSchema",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeFocusState",
          "initKind": "unknown",
          "isExported": true
        }
      ]
    },
    "src/schemas/layout.ts": {
      "imports": [
        {
          "from": "@effect/schema",
          "kind": "import",
          "imported": [
            "Schema"
          ]
        },
        {
          "from": "./nodes.js",
          "kind": "import",
          "imported": [
            "LayoutInfoSchema"
          ]
        }
      ],
      "dependencies": [
        "src/schemas/nodes.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": [
        {
          "name": "LayoutRequestSchema",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeLayoutRequest",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "LayoutResultSchema",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeLayoutResult",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "ChildLayoutEntrySchema",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeChildLayoutEntry",
          "initKind": "unknown",
          "isExported": true
        }
      ]
    },
    "src/schemas/nodes.ts": {
      "imports": [
        {
          "from": "@effect/schema",
          "kind": "import",
          "imported": [
            "Schema"
          ]
        },
        {
          "from": "./props.js",
          "kind": "import",
          "imported": [
            "BoxPropsSchema",
            "StaticPropsSchema",
            "TextPropsSchema",
            "TransformPropsSchema"
          ]
        }
      ],
      "dependencies": [
        "src/schemas/props.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": [
        {
          "name": "NodeTypeSchema",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeNodeType",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "LayoutInfoSchema",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeLayoutInfo",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "NodeMetadataSchema",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeNodeMetadata",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "YogaNodeSchema",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeYogaNode",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "TextStyleSchema",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeTextStyle",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "StyledTextSchema",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeStyledText",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "RootNodeSchema",
          "initKind": "unknown",
          "isExported": true,
          "type": "Schema.Schema.Any"
        },
        {
          "name": "TextNodeSchema",
          "initKind": "unknown",
          "isExported": true,
          "type": "Schema.Schema.Any"
        },
        {
          "name": "BoxNodeSchema",
          "initKind": "unknown",
          "isExported": true,
          "type": "Schema.Schema.Any"
        },
        {
          "name": "NewlineNodeSchema",
          "initKind": "unknown",
          "isExported": true,
          "type": "Schema.Schema.Any"
        },
        {
          "name": "SpacerNodeSchema",
          "initKind": "unknown",
          "isExported": true,
          "type": "Schema.Schema.Any"
        },
        {
          "name": "StaticNodeSchema",
          "initKind": "unknown",
          "isExported": true,
          "type": "Schema.Schema.Any"
        },
        {
          "name": "TransformNodeSchema",
          "initKind": "unknown",
          "isExported": true,
          "type": "Schema.Schema.Any"
        },
        {
          "name": "RenderNodeSchema",
          "initKind": "unknown",
          "isExported": true,
          "type": "Schema.Schema.Any"
        },
        {
          "name": "decodeRenderNode",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeRootNode",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeTextNode",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeBoxNode",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeNewlineNode",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeSpacerNode",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeStaticNode",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeTransformNode",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "RenderTreeSchema",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeRenderTree",
          "initKind": "unknown",
          "isExported": true
        }
      ]
    },
    "src/schemas/props.ts": {
      "imports": [
        {
          "from": "@effect/schema",
          "kind": "import",
          "imported": [
            "Schema"
          ]
        }
      ],
      "dependencies": [],
      "functions": [],
      "classes": [],
      "constants": [
        {
          "name": "RGBColorSchema",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeRGBColor",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "HSLColorSchema",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeHSLColor",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "ColorSchema",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeColor",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "WrapModeSchema",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeWrapMode",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "TextPropsSchema",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeTextProps",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "FlexDirectionSchema",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeFlexDirection",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "JustifyContentSchema",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeJustifyContent",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "AlignItemsSchema",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeAlignItems",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "AlignSelfSchema",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeAlignSelf",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "PositionSchema",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodePosition",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "BorderStyleSchema",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeBorderStyle",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "DimensionSchema",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "NonNegativeNumberSchema",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "BoxPropsSchema",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeBoxProps",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "StaticPropsSchema",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeStaticProps",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "TransformPropsSchema",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeTransformProps",
          "initKind": "unknown",
          "isExported": true
        }
      ]
    },
    "src/schemas/terminal.ts": {
      "imports": [
        {
          "from": "@effect/schema",
          "kind": "import",
          "imported": [
            "Schema"
          ]
        }
      ],
      "dependencies": [],
      "functions": [],
      "classes": [],
      "constants": [
        {
          "name": "RGBColorSchema",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeRGBColor",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "TerminalStyleSchema",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeTerminalStyle",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "OutputSegmentSchema",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeOutputSegment",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "OutputLineSchema",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeOutputLine",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "OutputBufferSchema",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeOutputBuffer",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "ANTMLOutputSchema",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeANTMLOutput",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "ANTMLCommandSchema",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeANTMLCommand",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "OutputOperationSchema",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeOutputOperation",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "OutputDiffSchema",
          "initKind": "unknown",
          "isExported": true
        },
        {
          "name": "decodeOutputDiff",
          "initKind": "unknown",
          "isExported": true
        }
      ]
    },
    "src/types/input.ts": {
      "imports": [],
      "dependencies": [],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/types/layout.ts": {
      "imports": [
        {
          "from": "./nodes.js",
          "kind": "import",
          "imported": [
            "BoxProps"
          ]
        }
      ],
      "dependencies": [
        "src/types/nodes.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/types/nodes.ts": {
      "imports": [],
      "dependencies": [],
      "functions": [
        {
          "name": "generateNodeId",
          "params": [],
          "isAsync": false,
          "isExported": false,
          "returnType": "string"
        },
        {
          "name": "createRenderTree",
          "params": [],
          "isAsync": false,
          "isExported": true,
          "returnType": "RenderTree"
        },
        {
          "name": "createBaseNode",
          "params": [
            {
              "name": "id",
              "type": "string"
            },
            {
              "name": "type",
              "type": "NodeType"
            }
          ],
          "isAsync": false,
          "isExported": false,
          "returnType": "RenderNodeBase"
        },
        {
          "name": "createNode",
          "params": [
            {
              "name": "type",
              "type": "NodeType"
            }
          ],
          "isAsync": false,
          "isExported": true,
          "returnType": "RenderNode"
        }
      ],
      "classes": [],
      "constants": [
        {
          "name": "nodeDefaults",
          "initKind": "object",
          "isExported": false,
          "type": "Record<NodeType, Partial<RenderNode>>"
        },
        {
          "name": "isTextNode",
          "initKind": "function",
          "isExported": true
        },
        {
          "name": "isBoxNode",
          "initKind": "function",
          "isExported": true
        },
        {
          "name": "isNewlineNode",
          "initKind": "function",
          "isExported": true
        },
        {
          "name": "isSpacerNode",
          "initKind": "function",
          "isExported": true
        },
        {
          "name": "isStaticNode",
          "initKind": "function",
          "isExported": true
        },
        {
          "name": "isTransformNode",
          "initKind": "function",
          "isExported": true
        },
        {
          "name": "isRootNode",
          "initKind": "function",
          "isExported": true
        }
      ]
    },
    "src/types/terminal.ts": {
      "imports": [
        {
          "from": "./nodes.js",
          "kind": "import",
          "imported": [
            "RGBColor"
          ]
        }
      ],
      "dependencies": [
        "src/types/nodes.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    }
  }
}
